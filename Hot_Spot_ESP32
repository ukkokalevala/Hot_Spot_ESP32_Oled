#include <WiFi.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Define OLED display width and height
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1  // Reset pin (not needed for I2C)
#define OLED_ADDR     0x3C  // I2C address for the OLED display

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Define I2C pins for the ESP32-C3 (GPIO 20 -> SCL, GPIO 21 -> SDA)
#define SDA_PIN 21
#define SCL_PIN 20

// Define Wi-Fi credentials for station mode (connects to your router)

const char* ssid_STA = "Your_WiFi_SSID";
const char* password_STA = "Your_WiFi_Password";


// Define credentials for access point mode (creates a hotspot)
const char* ssid_AP = "ESP32C3_Hotspot";
const char* password_AP = "12345678";

// To store IP addresses
IPAddress ip_STA;
IPAddress ip_AP;

void setup() {
  // Start serial communication for debugging
  Serial.begin(9600);

  // Initialize I2C communication with specified pins
  Wire.begin(SDA_PIN, SCL_PIN);

  // Initialize the OLED display with error handling
  if (!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true); // Stop execution if OLED init fails
  }

  // Clear the display buffer
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("Initializing WiFi...");
  display.display();  // Show initialization message

  // Connect to external Wi-Fi (Station Mode)
  WiFi.begin(ssid_STA, password_STA);
  Serial.println("Connecting to external WiFi...");

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Still connecting...");
  }
  
  Serial.println("Connected to external WiFi!");
  ip_STA = WiFi.localIP();
  Serial.print("STA IP Address: ");
  Serial.println(ip_STA);

  // Start ESP32-C3 as an access point (hotspot)
  WiFi.softAP(ssid_AP, password_AP);
  Serial.println("Access Point started");
  ip_AP = WiFi.softAPIP();
  Serial.print("AP IP Address: ");
  Serial.println(ip_AP);

  // Update the display with the Wi-Fi information and connected clients
  updateDisplay();
}

void updateDisplay() {
  // Clear previous content
  display.clearDisplay();

  // Set text size and color
  display.setTextSize(1);
  display.setTextColor(WHITE);

  // Display Wi-Fi information for station mode (internet-connected)
  display.setCursor(0, 0);
  display.print("STA Mode IP: ");
  display.println(ip_STA);

  // Display Wi-Fi information for access point mode (hotspot)
  display.setCursor(0, 20);
  display.print("AP Mode IP: ");
  display.println(ip_AP);

  // Display list of connected clients (if any)
  display.setCursor(0, 40);
  display.print("Clients: ");
  int numClients = WiFi.softAPgetStationNum();
  display.println(numClients);

  // If connected clients are greater than 0, print a placeholder message
  if (numClients > 0) {
    display.setCursor(0, 50);
    display.print("Clients connected!");
  } else {
    display.setCursor(0, 50);
    display.print("No clients connected");
  }

  // Show the information on the display
  display.display();
}

void loop() {
  // Update the display with the connected clients list periodically
  updateDisplay();
  delay(10000);  // Update every 10 seconds
}
